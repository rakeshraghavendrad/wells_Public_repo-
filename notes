# Import necessary libraries
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Assuming df is your Spark DataFrame converted to Pandas for visualization
# For large datasets, you can sample down if necessary
df = spark_df.toPandas()  # If using Spark DataFrame

# List of critical columns
critical_columns = ['first_name', 'second_name', 'third_name', 'address', 'email', 'city', 'zip_code', 'state_code']

# 1. Check for null values in critical columns
null_counts = df[critical_columns].isnull().sum()
null_percentage = (null_counts / len(df)) * 100

# Display the counts and percentages of null values
print("Null Value Counts:")
print(null_counts)

print("\nNull Value Percentage:")
print(null_percentage)

# 2. Visualize the distribution of null values using a bar plot
plt.figure(figsize=(10, 6))
sns.barplot(x=null_counts.index, y=null_percentage.values)
plt.title('Percentage of Null Values in Critical Columns')
plt.ylabel('Percentage of Null Values')
plt.xticks(rotation=45)
plt.show()

# 3. Optional: Visualize a heatmap to show null values across rows
plt.figure(figsize=(12, 8))
sns.heatmap(df[critical_columns].isnull(), cbar=False, cmap='viridis')
plt.title('Heatmap of Null Values in Critical Columns')
plt.show()

# 4. Correlate null values with Profile_notmatched
plt.figure(figsize=(10, 6))
null_profile_relation = df[df['Profile_notmatched'].notnull()][critical_columns].isnull().mean() * 100
sns.barplot(x=null_profile_relation.index, y=null_profile_relation.values)
plt.title('Null Values in Profile_notmatched Entries')
plt.ylabel('Percentage of Null Values')
plt.xticks(rotation=45)
plt.show()
