
import pandas as pd

# Function to classify similarity mismatches based on pattern clustering
def rule_based_clustering(row):
    jw, lev, fuzz = row['jaro_winkler'], row['levenshtein_score'], row['fuzzy_partial_ratio']

    # Case 1: All scores are close (within 0.02-0.03 range) → Formatting Issue
    if abs(jw - lev) < 0.03 and abs(jw - fuzz) < 0.03:
        return "Minor Formatting Issue (spacing, abbreviations, punctuation)"
    
    # Case 2: Levenshtein is significantly lower → Typo / Spelling Issue
    if lev < jw and lev < fuzz:
        return "Typos / Spelling Errors"

    # Case 3: Jaro-Winkler is significantly lower → Reordering
    if jw < lev and jw < fuzz:
        return "Reordering Issue"

    # Case 4: Fuzzy Partial Ratio is significantly lower → Missing/Extra Words
    if fuzz < jw and fuzz < lev:
        return "Missing/Extra Words"

    return "Unclassified"  # If it doesn't fit any known pattern

# Apply the function to the DataFrame
df_1['summary'] = df_1.apply(rule_based_clustering, axis=1)

# Display the DataFrame with manually clustered categories
import ace_tools as tools
tools.display_dataframe_to_user(name="Rule-Based Clustering DataFrame", dataframe=df_1)
