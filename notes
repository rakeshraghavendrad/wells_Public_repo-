import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Sample Data: Creating a dataframe similar to your description
data = {
    'first_name_db1': ['John', 'Jane', 'Alice', None, 'Michael'],
    'second_name_db1': ['Doe', 'Smith', 'Brown', 'Johnson', None],
    'address_db1': ['123 Elm St', None, '456 Oak St', '789 Pine St', '321 Maple St'],
    'email_db1': ['john@example.com', 'jane@example.com', None, 'michael@example.com', 'mike@example.com'],
    'city_db1': ['New York', None, 'Los Angeles', 'Chicago', 'Miami'],
    'zip_code_db1': ['10001', None, '90001', '60601', '33101'],
    'state_code_db1': ['NY', 'NY', 'CA', None, 'FL'],
    'profile_match': ['Profile_matched', 'Profile_notmatched', 'Profile_notmatched', None, 'Profile_matched']
}

# Convert the dictionary to a pandas dataframe
df = pd.DataFrame(data)

# Check for null or missing values in critical columns
null_values = df.isnull().sum()
print("Null values in each column:\n", null_values)

# Visualize the null value distribution
plt.figure(figsize=(10, 6))
sns.heatmap(df.isnull(), cbar=False, cmap='viridis')
plt.title("Missing Values Heatmap")
plt.show()

# Analyze how missing values impact matching by correlating with 'profile_match'
null_vs_match = df[df.isnull().any(axis=1)]['profile_match'].value_counts()
print("Null values impact on profile matching:\n", null_vs_match)

# Visualize the relationship between null values and matching status
plt.figure(figsize=(8, 5))
sns.countplot(x='profile_match', data=df[df.isnull().any(axis=1)])
plt.title("Profile Match Status for Rows with Missing Values")
plt.show()
