from PIL import ImageDraw

def mask_coordinates_with_white(sharp_image, coordinates):
    """
    Draws a white rectangle over the specified coordinates on the sharpened image.
    
    Parameters:
    - sharp_image (PIL Image): Sharpened grayscale image.
    - coordinates (tuple): Coordinates in the format (xmin, ymin, xmax, ymax).
    
    Returns:
    - masked_image (PIL Image): Image with a white rectangle over the specified coordinates.
    """
    # Create a copy of the sharpened image to draw on
    masked_image = sharp_image.copy()
    draw = ImageDraw.Draw(masked_image)
    
    # Extract coordinates
    xmin, ymin, xmax, ymax = coordinates
    
    # Draw a white rectangle over the coordinates
    draw.rectangle((xmin, ymin, xmax, ymax), outline=None, fill='white', width=0)
    
    return masked_image

# Example usage
masked_image = mask_coordinates_with_white(sharpened_image, (50, 50, 200, 100))

# Display the masked image to verify
masked_image.show()
