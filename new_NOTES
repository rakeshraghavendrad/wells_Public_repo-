

from PIL import Image, ImageDraw

def crop_small_region(image_path, x, y, offset=5):
    try:
        # Load the image
        image = Image.open(image_path)

        # Get image dimensions
        width, height = image.size
        print(f"Image dimensions: {width}x{height}")

        # Adjust coordinates to create a small box around the point
        x1 = max(0, x - offset)
        y1 = max(0, y - offset)
        x2 = min(width, x + offset)
        y2 = min(height, y + offset)

        # Validate coordinates
        if x1 >= x2 or y1 >= y2:
            print("Error: Invalid coordinates after adjustment.")
            return

        # Crop the image around the point
        cropped_image = image.crop((x1, y1, x2, y2))

        # Draw a rectangle on the original image to highlight the area
        draw = ImageDraw.Draw(image)
        draw.rectangle([x1, y1, x2, y2], outline="red", width=2)

        # Show the original image with the marked area
        image.show(title="Original Image with Highlighted Area")

        # Show the cropped image
        cropped_image.show(title="Cropped Region")

        # Save the cropped image
        cropped_image.save('cropped_image.jpg')
        print("Cropped image saved successfully.")

    except Exception as e:
        print(f"Error: {e}")

# Example usage with your coordinates
crop_small_region('path_to_image.jpg', 20, 20)
