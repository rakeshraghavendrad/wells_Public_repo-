import cv2
from PIL import Image, ImageEnhance, ImageDraw
import numpy as np
import matplotlib.pyplot as plt

def move_text_seamless(image_path, coordinates, direction, percent):
    # Load the original image
    img = cv2.imread(image_path)
    img_rgb = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)

    # Convert to grayscale and enhance contrast
    gray = cv2.cvtColor(img, cv2.COLOR_BGR2GRAY)
    enhanced = cv2.convertScaleAbs(gray, alpha=1.5, beta=0)

    # Extract coordinates
    xmin, ymin, xmax, ymax = coordinates

    # Crop the region to move
    cropped = img[ymin:ymax, xmin:xmax]

    # Move the text based on direction and percentage
    dx = int((xmax - xmin) * percent / 100)
    dy = int((ymax - ymin) * percent / 100)

    if direction == 'up':
        new_y = max(0, ymin - dy)
        new_x = xmin
    elif direction == 'down':
        new_y = min(img.shape[0] - (ymax - ymin), ymin + dy)
        new_x = xmin
    elif direction == 'left':
        new_x = max(0, xmin - dx)
        new_y = ymin
    elif direction == 'right':
        new_x = min(img.shape[1] - (xmax - xmin), xmin + dx)
        new_y = ymin

    # Create a mask for seamless cloning
    mask = np.zeros_like(cropped, dtype=np.uint8)
    mask[:] = 255

    # Clone the moved text onto the background using seamless cloning
    center = (new_x + cropped.shape[1] // 2, new_y + cropped.shape[0] // 2)
    result = cv2.seamlessClone(cropped, img, mask, center, cv2.MIXED_CLONE)

    # Display the result
    plt.figure(figsize=(10, 8))
    plt.imshow(cv2.cvtColor(result, cv2.COLOR_BGR2RGB))
    plt.title(f"Text moved {direction} by {percent}% using seamless cloning")
    plt.axis('off')
    plt.show()

# Example usage
image_path = "/mnt/data/Screenshot 2025-05-13 at 8.01.28â€¯PM.png"
coordinates = (50, 50, 200, 100)  # Example coordinates
move_text_seamless(image_path, coordinates, 'right', 5)
