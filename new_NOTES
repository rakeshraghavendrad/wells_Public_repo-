from PIL import Image, ImageDraw

def rotate_object(df, list_of_angles):
    for index, row in df.iterrows():
        image_path = os.path.join(DIR, row['FILE_NAME'])
        print(f"Processing: {image_path}")

        for element in columns:
            if row[element] is not None:
                # Load the image
                image = Image.open(image_path)
                print(f"Operations performed on: {element}")

                # Extract coordinates
                xmin, ymin, xmax, ymax = map(int, row[element].split(','))
                cropped_img = image.crop((xmin, ymin, xmax, ymax))
                background_color = cropped_img.getpixel((0, 0))

                # Rotation Logic
                for angle in list_of_angles:
                    print(f"Rotating by {angle} degrees")
                    rotated_cropped_img = cropped_img.rotate(angle, expand=True, fillcolor=background_color)

                    # Create a blank image for drawing
                    mod_img = Image.new('RGB', image.size, (255, 255, 255))
                    mod_img.paste(image)

                    # Paste the rotated object
                    mod_img.paste(rotated_cropped_img, (xmin, ymin))

                    # Display the rotated image
                    plt.figure(figsize=(10, 20))
                    plt.imshow(mod_img)
                    plt.title(f"Rotated: {angle}Â°")
                    plt.xticks(fontsize=9)
                    plt.yticks(fontsize=9)
                    plt.show()
